«REM» Copyright (c) 2009-2012 by droMDAry.org (see CONTRIBUTORS)            «ENDREM»
«REM» All rights reserved. This program and the accompanying materials      «ENDREM»
«REM» are made available under the terms of the Eclipse Public License v1.0 «ENDREM»
«REM» which accompanies this distribution, and is available at              «ENDREM»
«REM» http://www.eclipse.org/legal/epl-v10.html                             «ENDREM»
«EXTENSION org::eclipse::xtend::util::stdlib::io»

«EXTENSION org::fornax::cartridges::uml2::javabasic::m2t::Helper»
«EXTENSION org::fornax::cartridges::uml2::javabasic::m2t::Properties»
«EXTENSION org::fornax::cartridges::uml2::javabasic::m2t::DataType»


«EXTENSION org::dromdary::jpa::generator::extensions::EntityHelper»
«EXTENSION org::dromdary::jpa::generator::extensions::PropertiesHelper»
«EXTENSION org::dromdary::jpa::generator::extensions::NameHelper»


«DEFINE jpaEntity(boolean implHierarchy) FOR uml::Class»
	«IF getAppliedStereotype("SimpleJSR220::JPA_Entity")!=null»
		«EXPAND file(implHierarchy) FOR this»
	«ENDIF»
«ENDDEFINE»

«DEFINE file(boolean implHierarchy) FOR uml::Class»
		«REM»Generate entity interface«ENDREM»
		«FILE getFQNPackagePath()+"/interfaces/"+interfaceName(name)+".java"»
			«getTypeHeader()»
			package «getFQNPackageName()».interfaces;
			«EXPAND imports»
			«EXPAND org::fornax::cartridges::uml2::javabasic::m2t::Documentation::documentation»
			public interface «interfaceName(name)»
			«IF !interfaceRealization.isEmpty» extends «FOREACH interfaceRealization AS ir SEPARATOR ","»«((uml::Interface)ir.supplier.first()).name»«ENDFOREACH»«ENDIF»	
			«IF getAppliedStereotype("SimpleJSR220::JPA_RootJPA") != null», IRootEntity	«ENDIF» {	
			«EXPAND org::fornax::cartridges::uml2::javabasic::m2t::Attribute::staticAttribute»				
			«EXPAND Association::entityInterfaceGetter FOR this»
			«IF !isId()»
				«EXPAND idInterfaceGetterSetter FOR this»
			«ENDIF»
			«EXPAND Attribute::getterSetterInterface»
			«EXPAND org::fornax::cartridges::uml2::javabasic::m2t::Operation::operationInterface FOREACH this.getOperations()»					
			«EXPAND org::fornax::cartridges::uml2::javabasic::m2t::Entity::interfaceEntityEndDefine»	
		«ENDFILE»
		
		«REM»Generate abstract entity«ENDREM»
		«FILE getFQNPackagePath()+"/"+abstractClassName(name)+".java"»
			«EXPAND org::fornax::cartridges::uml2::javabasic::m2t::Entity::head»
			«EXPAND annotation FOR this»
			«IF implHierarchy»
				«EXPAND AbstractGeneration::abstractClassEntityDefine»
			«ELSE»
				public abstract class «abstractClassName(name)»
					«IF !generalization.isEmpty»
						extends «abstractClassName(name)»
					«ENDIF»
				implements «interfaceName(name)»{
			«ENDIF»		
			«IF !isId()»
				«EXPAND idAbstractAttr FOR this»
			«ENDIF»
			«EXPAND Attribute::allAttribute»
			«EXPAND org::fornax::cartridges::uml2::javabasic::m2t::Attribute::staticAttribute»
			«EXPAND Association::entityAbstractAttribute FOR this»
			«IF !isId()»
				«EXPAND idAbstractGetterSetter FOR this»
			«ENDIF»
			«EXPAND Attribute::getterSetter»
			«EXPAND Association::entityAbstractGetterSetter FOR this»		
			«IF getInterfaceOperationImplementationStrategy() == "use_abstract_method"»				
				«EXPAND org::fornax::cartridges::uml2::javabasic::m2t::Operation::operation(true)»				
			«ELSEIF getInterfaceOperationImplementationStrategy() == "none"»				
				«EXPAND org::fornax::cartridges::uml2::javabasic::m2t::Operation::operation»					
			«ENDIF»							
			«EXPAND org::fornax::cartridges::uml2::javabasic::m2t::Class::overwriteHashcodeEqualsToString»			
			«EXPAND org::fornax::cartridges::uml2::javabasic::m2t::Entity::abstractClassEntityEndDefine»		
		«ENDFILE»
		
		«REM»Generate implementation class of entity«ENDREM»
		«IF !isAbstract»
			«FILE getFQNPackagePath()+"/"+implementationClassName(name)+".java" outletSrcOnceDir»
				«getTypeHeader()»
				package «getFQNPackageName()»;
				«EXPAND imports»
				«EXPAND org::fornax::cartridges::uml2::javabasic::m2t::Documentation::documentation»
				public class «implementationClassName(name)» extends «abstractClassName(name)» implements java.io.Serializable {
				«EXPAND org::fornax::cartridges::uml2::javabasic::m2t::SerialVersionUID::serialVersionUIDField»
				«IF getInterfaceOperationImplementationStrategy() == "use_abstract_method"»
					«EXPAND org::fornax::cartridges::uml2::javabasic::m2t::Operation::operationBaseImpl(true)»						
				«ELSEIF getInterfaceOperationImplementationStrategy() == "none"»
					«EXPAND org::fornax::cartridges::uml2::javabasic::m2t::Operation::operationBaseImpl»
				«ENDIF»
				«EXPAND org::fornax::cartridges::uml2::javabasic::m2t::Entity::basicClassEntityEndDefine»
			«ENDFILE»
		«ENDIF»
«ENDDEFINE»

«DEFINE idAbstractAttr FOR uml::Class»
		«IF searchIdAttributeName()»
			@Id
		«ELSE»
			«IF isExtendedClass()»
			
			«ELSE»
				@Id
				private int id;
			«ENDIF»
		«ENDIF»
«ENDDEFINE»

«DEFINE idAbstractGetterSetter FOR uml::Class»
	«IF searchIdAttributeName()»
	
	«ELSE»
		«IF isExtendedClass()»
		
		«ELSE»
			/**
			 * 
			 * @return The «REM»«IF isExtendedClass()»«name.toFirstLower()»Id«ELSE»id«ENDIF»«ENDREM»id as <code>java.lang.Integer</code>
			 */
			public java.lang.Integer get«REM»«IF isExtendedClass()»«name»«ENDIF»«ENDREM»Id() {
				return «REM»«IF isExtendedClass()»«name.toFirstLower()»Id«ELSE»id«ENDIF»«ENDREM»id;
			}
		
			/**
			 * 
			 * @param «REM»«IF isExtendedClass()»«name.toFirstLower()»Id«ELSE»id«ENDIF»«ENDREM»id The «REM»«IF isExtendedClass()»«name»Id«ELSE»id«ENDIF»«ENDREM»id to set
			 */
			public void set«REM»«IF isExtendedClass()»«name»«ENDIF»«ENDREM»Id(java.lang.Integer id) {
				this.«REM»«IF isExtendedClass()»«name.toFirstLower()»Id«ELSE»id«ENDIF»«ENDREM»id = «REM»«IF isExtendedClass()»«name.toFirstLower()»Id«ELSE»id«ENDIF»«ENDREM»id;
			}
		«ENDIF»
	«ENDIF»
«ENDDEFINE»

«DEFINE idInterfaceGetterSetter FOR uml::Class»
	«IF searchIdAttributeName()»
	
	«ELSE»
		«IF isExtendedClass()»
		
		«ELSE»
			/**
			 * 
			 * @return The id as <code>java.lang.Integer</code>
			 */
		
			public java.lang.Integer getId();
		
			/**
			 * 
			 * @param id The id to set
			 */
		
			public void setId(java.lang.Integer id);
		«ENDIF»
	«ENDIF»
«ENDDEFINE»

«DEFINE annotation FOR uml::Class»
	«IF getAppliedStereotype("SimpleJSR220::JPA_Entity") != null»
		@Entity  
	«ENDIF»	
	«IF getAppliedStereotype("SimpleJSR220::JPA_TableJPA") == null»
		@Table(name="«generateTableName(name)»"«IF genDefTableSchemaTaggedValue() == "true"», schema="«getTableSchema()»"«ENDIF»)
	«ENDIF»	
«ENDDEFINE»

«DEFINE imports FOR uml::Class»
	import javax.persistence.*;
	import static javax.persistence.CascadeType.ALL;
	import java.math.*;
	import java.util.*;
	«FOREACH getAllPackages(this.package) AS pkg»
		import «convertToJavaPackageName(pkg.getQualifiedName())».*;
		import «convertToJavaPackageName(pkg.getQualifiedName())».interfaces.*;
	«ENDFOREACH»
«ENDDEFINE»