«REM» Copyright (c) 2009-2010 by droMDAry.org (see CONTRIBUTORS)            «ENDREM»
«REM» All rights reserved. This program and the accompanying materials      «ENDREM»
«REM» are made available under the terms of the Eclipse Public License v1.0 «ENDREM»
«REM» which accompanies this distribution, and is available at              «ENDREM»
«REM» http://www.eclipse.org/legal/epl-v10.html                             «ENDREM»
«EXTENSION org::eclipse::xtend::util::stdlib::io»
«EXTENSION org::eclipse::xtend::util::stdlib::counter»
«EXTENSION org::fornax::cartridges::uml2::javabasic::m2t::Helper»
«EXTENSION org::dromdary::jpa::generator::extensions::NameHelper»
«EXTENSION org::fornax::cartridges::uml2::javabasic::m2t::Properties»

«EXTENSION org::dromdary::jpa::generator::extensions::EntityHelper»

«REM»Template for associations. Note: This is a workaround, the javabasic cartridge don't understand the XMI from Enterprise Architect.«ENDREM»
«DEFINE entityInterfaceGetter FOR uml::Class»
	«LET this.getAssociations() AS a»		
		«FOREACH a AS ae»
			«IF ae.ownedEnd.size > 1»		
				«REM»OneToOne-association«ENDREM»
				«IF ae.ownedEnd.get(0).getUpper()==1»
					«IF ae.ownedEnd.get(1).getUpper()==1»
						«IF ae.ownedEnd.get(0).type.name==name»
							/**
							 * 
							 * @return The «ae.ownedEnd.get(1).type.name.toFirstLower()» as <code>«ae.ownedEnd.get(1).type.package.name».«ae.ownedEnd.get(1).type.name»</code>
							 */
							public «ae.ownedEnd.get(1).type.package.name».«ae.ownedEnd.get(1).type.name» get«ae.ownedEnd.get(1).type.name»();
							
							/**
							 * 
							 * @param «ae.ownedEnd.get(1).type.name.toFirstLower()» The «ae.ownedEnd.get(1).type.name.toFirstLower()» to set
							 */
							public void set«ae.ownedEnd.get(1).type.name»(«ae.ownedEnd.get(1).type.package.name».«ae.ownedEnd.get(1).type.name» «ae.ownedEnd.get(1).type.name.toFirstLower()»);
						«ENDIF»
					«ENDIF»
				«ENDIF»
				«REM»OneToMany-association«ENDREM»
				«IF ae.ownedEnd.get(0).getUpper()==1»
					«IF ae.ownedEnd.get(1).getUpper()==-1»
						«IF ae.ownedEnd.get(0).type.name==name»
							/**
							 * 
							 * @return The «ae.ownedEnd.get(1).type.name.toFirstLower()» as <code>java.util.Set<«ae.ownedEnd.get(1).type.package.name».«ae.ownedEnd.get(1).type.name»></code>
							 */
							public java.util.Set<«ae.ownedEnd.get(1).type.package.name».«ae.ownedEnd.get(1).type.name»> get«ae.ownedEnd.get(1).type.name»();
							
							/**
							 * 
							 * @param «ae.ownedEnd.get(1).type.name.toFirstLower()» The «ae.ownedEnd.get(1).type.name.toFirstLower()» to set
							 */
							public void set«ae.ownedEnd.get(1).type.name»(java.util.Set<«ae.ownedEnd.get(1).type.package.name».«ae.ownedEnd.get(1).type.name»>«ae.ownedEnd.get(1).type.name.toFirstLower()»);
						«ENDIF»
					«ENDIF»
				«ENDIF»	
				«REM»ManyToOne-association«ENDREM»
				«IF ae.ownedEnd.get(0).getUpper()==-1»
					«IF ae.ownedEnd.get(1).getUpper()==1»
						«IF ae.ownedEnd.get(0).type.name==name»
							/**
							 * 
							 * @return The «ae.ownedEnd.get(1).type.name.toFirstLower()» as <code>«ae.ownedEnd.get(1).type.package.name».«ae.ownedEnd.get(1).type.name»</code>
							 */
							public «ae.ownedEnd.get(1).type.package.name».«ae.ownedEnd.get(1).type.name» get«ae.ownedEnd.get(1).type.name»();
							
							/**
							 * 
							 * @param «ae.ownedEnd.get(1).type.name.toFirstLower()» The «ae.ownedEnd.get(1).type.name.toFirstLower()» to set
							 */
							public void set«ae.ownedEnd.get(1).type.name»(«ae.ownedEnd.get(1).type.package.name».«ae.ownedEnd.get(1).type.name» «ae.ownedEnd.get(1).type.name.toFirstLower()»);
						«ENDIF»
					«ENDIF»
				«ENDIF»	
				«REM»ManyToMany-association«ENDREM»
				«IF ae.ownedEnd.get(0).getUpper()==-1»
					«IF ae.ownedEnd.get(1).getUpper()==-1»
						«IF ae.ownedEnd.get(0).type.name==name»
							/**
							 * 
							 * @return The «ae.ownedEnd.get(1).type.name.toFirstLower()» as <code>java.util.Set<«ae.ownedEnd.get(1).type.package.name».«ae.ownedEnd.get(1).type.name»></code>
							 */
							public java.util.Set<«ae.ownedEnd.get(1).type.package.name».«ae.ownedEnd.get(1).type.name»> get«ae.ownedEnd.get(1).type.name»();
							
							/**
							 * 
							 * @param «ae.ownedEnd.get(1).type.name.toFirstLower()» The «ae.ownedEnd.get(1).type.name.toFirstLower()» to set
							 */
							public void set«ae.ownedEnd.get(1).type.name»(java.util.Set<«ae.ownedEnd.get(1).type.package.name».«ae.ownedEnd.get(1).type.name»>«ae.ownedEnd.get(1).type.name.toFirstLower()»);
						«ENDIF»
					«ENDIF»
				«ENDIF»
			«ENDIF»
		«ENDFOREACH»	
	«ENDLET»
«ENDDEFINE»

«DEFINE entityAbstractAttribute FOR uml::Class»
	«LET this.getAssociations() AS a»		
		«FOREACH a AS ae»
			«IF ae.ownedEnd.size > 1»		
				«IF ae.ownedEnd.get(0).getUpper()==1»
					«IF ae.ownedEnd.get(1).getUpper()==1»
						«IF ae.ownedEnd.get(0).type.name==name»
							@OneToOne(targetEntity=«ae.ownedEnd.get(1).type.package.name».Abstract«ae.ownedEnd.get(1).type.name».class)
							public «ae.ownedEnd.get(1).type.name» «ae.ownedEnd.get(1).type.name.toFirstLower()» = null;
						«ENDIF»
					«ENDIF»
				«ENDIF»
				«IF ae.ownedEnd.get(0).getUpper()==1»
					«IF ae.ownedEnd.get(1).getUpper()==-1»
						«IF ae.ownedEnd.get(0).type.name==name»
							@OneToMany(targetEntity=«ae.ownedEnd.get(1).type.package.name».Abstract«ae.ownedEnd.get(1).type.name».class)
							«IF !isId()»
								@JoinColumn(name = "«this.name»_id", nullable = false)
							«ELSEIF isId()»
						    	@JoinColumns({
									«FOREACH getIdAttributes() AS e ITERATOR iter»									
										@JoinColumn(name = "«this.name»_«e.name»", nullable = false),
									«ENDFOREACH»
										@JoinColumn(name = "«this.name»_«name.toFirstLower()»Pk", nullable = false),
								})
						    «ELSE»
								@JoinColumn(name = "«getColumnNamePrefix(generateColumnName("id", generateTableName(ae.ownedEnd.get(1).type.name)))»_«generateColumnName("id", generateTableName(ae.ownedEnd.get(1).class.name))»", referencedColumnName = "«generateColumnName("id", generateTableName(ae.ownedEnd.get(1).class.name))»", nullable = false)
							«ENDIF»
							public java.util.Set<«ae.ownedEnd.get(1).type.package.name».I«ae.ownedEnd.get(1).type.name»> «ae.ownedEnd.get(1).type.name.toFirstLower()» = null;
						«ENDIF»
					«ENDIF»
				«ENDIF»	
				«IF ae.ownedEnd.get(0).getUpper()==-1»
					«IF ae.ownedEnd.get(1).getUpper()==1»
						«IF ae.ownedEnd.get(0).type.name==name»
							@ManyToOne(targetEntity=«ae.ownedEnd.get(1).type.package.name».Abstract«ae.ownedEnd.get(1).type.name».class)
							«IF !isId()»
								@JoinColumn(name = "«this.name»_id", nullable = false)
							«ELSEIF isId()»
						    	@JoinColumns({
									«FOREACH getIdAttributes() AS e ITERATOR iter»									
										@JoinColumn(name = "«this.name»_«e.name»", nullable = false),
									«ENDFOREACH»
										@JoinColumn(name = "«this.name»_«name.toFirstLower()»Pk", nullable = false),
								})
						    «ELSE»
								@JoinColumn(name = "«getColumnNamePrefix(generateColumnName("id", generateTableName(ae.ownedEnd.get(1).type.name)))»_«generateColumnName("id", generateTableName(ae.ownedEnd.get(1).class.name))»", referencedColumnName = "«generateColumnName("id", generateTableName(ae.ownedEnd.get(1).class.name))»", nullable = false)
							«ENDIF»
							public «ae.ownedEnd.get(1).type.package.name».I«ae.ownedEnd.get(1).type.name» «ae.ownedEnd.get(1).type.name.toFirstLower()» = null;
						«ENDIF»
					«ENDIF»
				«ENDIF»	
				«IF ae.ownedEnd.get(0).getUpper()==-1»
					«IF ae.ownedEnd.get(1).getUpper()==-1»
						«IF ae.ownedEnd.get(0).type.name==name»
							@ManyToMany(targetEntity=«ae.ownedEnd.get(1).type.package.name».Abstract«ae.ownedEnd.get(1).type.name».class)
							«IF !isId()»
								@JoinColumn(name = "«this.name»_id", nullable = false)
							«ELSEIF isId()»
						    	@JoinColumns({
									«FOREACH getIdAttributes() AS e ITERATOR iter»									
										@JoinColumn(name = "«this.name»_«e.name»", nullable = false),
									«ENDFOREACH»
										@JoinColumn(name = "«this.name»_«name.toFirstLower()»Pk", nullable = false),
								})
						    «ELSE»
								@JoinColumn(name = "«getColumnNamePrefix(generateColumnName("id", generateTableName(ae.ownedEnd.get(1).type.name)))»_«generateColumnName("id", generateTableName(ae.ownedEnd.get(1).class.name))»", referencedColumnName = "«generateColumnName("id", generateTableName(ae.ownedEnd.get(1).class.name))»", nullable = false)
							«ENDIF»
							public java.util.Set<«ae.ownedEnd.get(1).type.package.name».I«ae.ownedEnd.get(1).type.name»> «ae.ownedEnd.get(1).type.name.toFirstLower()» = null;
						«ENDIF»
					«ENDIF»
				«ENDIF»
			«ENDIF»
		«ENDFOREACH»	
	«ENDLET»
«ENDDEFINE»

«DEFINE entityAbstractGetterSetter FOR uml::Class»
	«LET this.getAssociations() AS a»		
		«FOREACH a AS ae»
			«IF ae.ownedEnd.size > 1»		
				«REM»OneToOne-association«ENDREM»
				«IF ae.ownedEnd.get(0).getUpper()==1»
					«IF ae.ownedEnd.get(1).getUpper()==1»
						«IF ae.ownedEnd.get(0).type.name==name» 
							/**
							 * 
							 * @return The «ae.ownedEnd.get(1).type.name.toFirstLower()» as <code>«ae.ownedEnd.get(1).type.package.name».«ae.ownedEnd.get(1).type.name»</code>
							 */
							public «ae.ownedEnd.get(1).type.package.name».«ae.ownedEnd.get(1).type.name» get«ae.ownedEnd.get(1).type.name»() { return «ae.ownedEnd.get(1).type.name.toFirstLower()»; }
							
							/**
							 * 
							 * @param «ae.ownedEnd.get(1).type.name.toFirstLower()» The «ae.ownedEnd.get(1).type.name.toFirstLower()» to set
							 */
							public void set«ae.ownedEnd.get(1).type.name»(«ae.ownedEnd.get(1).type.package.name».«ae.ownedEnd.get(1).type.name» «ae.ownedEnd.get(1).type.name.toFirstLower()») { this.«ae.ownedEnd.get(1).type.name.toFirstLower()» = «ae.ownedEnd.get(1).type.name.toFirstLower()»; }
						«ENDIF»
					«ENDIF»
				«ENDIF»
				«REM»OneToMany-association«ENDREM»
				«IF ae.ownedEnd.get(0).getUpper()==1»
					«IF ae.ownedEnd.get(1).getUpper()==-1»
						«IF ae.ownedEnd.get(0).type.name==name» 
							/**
							 * 
							 * @return The «ae.ownedEnd.get(1).type.name.toFirstLower()» as <code>java.util.Set<«ae.ownedEnd.get(1).type.package.name».«ae.ownedEnd.get(1).type.name»></code>
							 */
							public java.util.Set<«ae.ownedEnd.get(1).type.package.name».«ae.ownedEnd.get(1).type.name»> get«ae.ownedEnd.get(1).type.name»() { return «ae.ownedEnd.get(1).type.name.toFirstLower()»; }
							
							/**
							 * 
							 * @param «ae.ownedEnd.get(1).type.name.toFirstLower()» The «ae.ownedEnd.get(1).type.name.toFirstLower()» to set
							 */
							public void set«ae.ownedEnd.get(1).type.name»(java.util.Set<«ae.ownedEnd.get(1).type.package.name».«ae.ownedEnd.get(1).type.name»>«ae.ownedEnd.get(1).type.name.toFirstLower()») { this.«ae.ownedEnd.get(1).type.name.toFirstLower()» = «ae.ownedEnd.get(1).type.name.toFirstLower()»; }
						«ENDIF»
					«ENDIF»
				«ENDIF»	
				«REM»ManyToOne-association«ENDREM»
				«IF ae.ownedEnd.get(0).getUpper()==-1»
					«IF ae.ownedEnd.get(1).getUpper()==1»
						«IF ae.ownedEnd.get(0).type.name==name»
							/**
							 * 
							 * @return The «ae.ownedEnd.get(1).type.name.toFirstLower()» as <code>«ae.ownedEnd.get(1).type.package.name».«ae.ownedEnd.get(1).type.name»</code>
							 */
							public «ae.ownedEnd.get(1).type.package.name».«ae.ownedEnd.get(1).type.name» get«ae.ownedEnd.get(1).type.name»() { return «ae.ownedEnd.get(1).type.name.toFirstLower()»; }
							
							/**
							 * 
							 * @param «ae.ownedEnd.get(1).type.name.toFirstLower()» The «ae.ownedEnd.get(1).type.name.toFirstLower()» to set
							 */
							public void set«ae.ownedEnd.get(1).type.name»(«ae.ownedEnd.get(1).type.package.name».«ae.ownedEnd.get(1).type.name» «ae.ownedEnd.get(1).type.name.toFirstLower()») { this.«ae.ownedEnd.get(1).type.name.toFirstLower()» = «ae.ownedEnd.get(1).type.name.toFirstLower()»; }
						«ENDIF»
					«ENDIF»
				«ENDIF»	
				«REM»ManyToMany-association«ENDREM»
				«IF ae.ownedEnd.get(0).getUpper()==-1»
					«IF ae.ownedEnd.get(1).getUpper()==-1»
						«IF ae.ownedEnd.get(0).type.name==name»
							/**
							 * 
							 * @return The «ae.ownedEnd.get(1).type.name.toFirstLower()» as <code>java.util.Set<«ae.ownedEnd.get(1).type.package.name».«ae.ownedEnd.get(1).type.name»></code>
							 */ 
							public java.util.Set<«ae.ownedEnd.get(1).type.package.name».«ae.ownedEnd.get(1).type.name»> get«ae.ownedEnd.get(1).type.name»() { return «ae.ownedEnd.get(1).type.name.toFirstLower()»; }
							
							/**
							 * 
							 * @param «ae.ownedEnd.get(1).type.name.toFirstLower()» The «ae.ownedEnd.get(1).type.name.toFirstLower()» to set
							 */
							public void set«ae.ownedEnd.get(1).type.name»(java.util.Set<«ae.ownedEnd.get(1).type.package.name».«ae.ownedEnd.get(1).type.name»>«ae.ownedEnd.get(1).type.name.toFirstLower()») { this.«ae.ownedEnd.get(1).type.name.toFirstLower()» = «ae.ownedEnd.get(1).type.name.toFirstLower()»; }
						«ENDIF»
					«ENDIF»
				«ENDIF»
			«ENDIF»
		«ENDFOREACH»	
	«ENDLET»	
«ENDDEFINE»	