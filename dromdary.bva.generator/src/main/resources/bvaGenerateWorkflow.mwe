<?xml version="1.0" encoding="UTF-8"?>
<workflow>
<property file="./generator.properties" />

<bean class="org.eclipse.xtend.typesystem.uml2.Setup"
	standardUML2Setup="true" />

<!-- Meta Meta Model in EMF Format -->
<bean id="mm_Emf" class="org.eclipse.xtend.typesystem.emf.EmfMetaModel"> 
      <metaModelPackage value="org.eclipse.emf.ecore.EcorePackage"/> 
</bean> 

<!-- Meta Meta Model in UML Format -->	
<bean id="mm_uml2"
	class="org.eclipse.xtend.typesystem.uml2.UML2MetaModel" />

<!-- Profil -->	
<!--<bean id="mm_profile"
	class="org.eclipse.xtend.typesystem.uml2.profile.ProfileMetaModel">
	<profile value="${profile.persistence.file}" />
</bean>-->

<!-- read model -->
<component class="org.eclipse.xtend.typesystem.emf.XmiReader">
	<modelFile value="${model.file}"/>
	<outputSlot value="model"/>
</component>

<!-- clean directory -->
<component id="dirCleaner"
    class="org.eclipse.emf.mwe.utils.DirectoryCleaner" >
    <directory value="${outlet.src.dir}"/>
</component>

<!-- model to model transformation -->
<component class="org.dromdary.bva.generator.model2model.ModelTransformerBva">
  <modelSlot value="model"/>
</component>

<!-- PrimitiveTypes model to model transformation -->
<!-- uncomment following block to enable transformation of package PrimitiveTypes-->
<!--
<component class="org.dromdary.bva.generator.model2model.ModelTransformerPrimitiveTypes">
  	<modelSlot value="model"/>
</component>
-->

<!-- generate -->
<component id="generator"
    class="org.eclipse.xpand2.Generator" skipOnErrors="true" fileEncoding="UTF-8">
    <!-- Meta Meta Modelle -->
    <metaModel idRef="mm_Emf" />
	<metaModel idRef="mm_uml2" />
	<!--<metaModel idRef="mm_profile" />-->
	
	<!-- entrypoint of  aspect oriented template -->
	<advice value="org::dromdary::bva::generator::templates::Aspects" />
	
	<!-- - - - - - - - - - - - - - - - -->
	<!-- Global variables              -->
	<!-- values in workflow.properties -->
	<!-- - - - - - - - - - - - - - - - -->
	<globalVarDef name="interface_operation_implementation_strategy"
				value="${interface.operation.implementation.strategy}" />
   	<globalVarDef name="classes_operation_implementation_strategy"
		   		value="${classes.operation.implementation.strategy}"/>
   	<globalVarDef name="generate_additional_collection_methods"
	   		value="${generate.additional.collection.methods}"/>
	<globalVarDef name="use_overridden_equals_hashcode_toString" 
				value="${use.overridden.equals.hashcode.toString}" />
	<globalVarDef name="type_header_text"
				value="${type.header.text}" />
	<globalVarDef name="type_footer_text"
				value="${type.footer.text}" />
	<globalVarDef name="java_version"
				value="${java.version}" />
	<globalVarDef name="annotation_source_key"
				value="${annotation.source.key}" />
	<globalVarDef name="javabasic_generateSerialVersionUID"
				value="${javabasic.generateSerialVersionUID}" />
	
	<!-- entrypoint for template -->			
    <expand value="org::dromdary::bva::generator::templates::Root::Root FOR model"/>
    
    <!-- output of artifacts, not to be modified -->
    <outlet path="${outlet.src.dir}">
				<fileEncoding value="${file.encoding.output}"/>
				<postprocessor class="org.eclipse.xpand2.output.JavaBeautifier" />
	</outlet>   
	
	<!-- output of artifacts to be modified -->
    <outlet name="outletSrcOnceDir"
				path="${outlet.src.once.dir}" overwrite="false">
				<fileEncoding value="${file.encoding.output}"/>
				<postprocessor class="org.eclipse.xpand2.output.JavaBeautifier" />
	</outlet>

	<!-- output of artifacts which could be modified -->
    <outlet name="outletSrcProtectedDir"
				path="${outlet.src.protected.dir}" overwrite="false">
				<fileEncoding value="${file.encoding.output}"/>
				<postprocessor class="org.eclipse.xpand2.output.JavaBeautifier" />
	</outlet>

	
</component>
</workflow>